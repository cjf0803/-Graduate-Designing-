1.各位老师好，我叫陈锦房，来自19软件1班，首先非常感谢各位老师能在百忙之中来参加我的论文答辩并进行评审。接下来我将对我的毕设选题进行ppt的演示和项目的展示。

#### #首先各位老师们看到的是我的毕设ppt的展示。

2.我的毕业设计的选题是基于Spring+Vue的吾爱理财平台的设计与实现。我的指导老师是张茜和曹天杰老师，指导老师在我的论文编写过程和毕设项目的指导上都给了我很大的帮助。

3.这是我这次ppt演示的目录结构主要分为六大板块1.项目简介2.项目分析3.概要设计4.平台展示5.项目亮点以及6.项目总结

3.1.1首先我们进入到第一个板块项目简介，在项目简介中我主要就国内外理财状况做一个简要概括，首先是国外现状，国外发达国家理财起步较早，各种信息服务体制较为完善，金融服务以及内容集成度创新频繁。相较国外，国内理财现状起步较晚，但是以90 95后群体为主力军的带动下互联网理财逐渐成为我国居民生活的一个必备观念，越来越多的群体凭借优秀理财观念获取收益。

3.2.1项目简介大致介绍完毕，接下来我们进入到第二个板块项目分析，首先进行项目的可行性分析，分为三个方向介绍，1.技术可行性，2.操作可行性，3.经济可行性。对于技术可行性，本平台采用java后端语言编写，运用到了主流后端框架springboot 数据库方面使用了oracle 大型数据库，前端方面采用了主流框架vue2.0全家桶，并使用了element ui 组件库。对于操作可行性，本平台采用菜单式，实现用户与数据库交互，界面简洁友好，方便操作。对于经济可行性，本吾爱理财平台是使用Java开发语言，网站的规模适中，开发周期短，因此，在项目的开发阶段不会投入太多资金。

3.2.2接下来进入到项目分析的第二个分析，需求分析之功能需求，本平台主要有六个功能模块分别是1.前台界面模块2.用户中心模块3.后台管理模块4.预购中心模块5.订单模块6.支付模块，具体的功能展示在接下来的项目展示中会有所涉及。

3.3.1项目分析大致介绍完毕，接下来进入到第三个板块概要设计。首先展示的是本平台的整体结构功能图，主要分为前台和后台；以及用例图的展示，同样是两个方向，用户以及管理员；最后是e-r图的设计，可以大致看出各个模块间有相互的联系，比如这边用户产生预购中心产品，再有预购中心去生成一份订单给到后台管理。

3.4.1概要设计大致介绍完毕，接下来我们进入到第四个板块平台展示。

#### 然后接下来我将对我的项目进行一个完整的运行展示。

**沙箱支付 用户名：hidgql5480@sandbox.com 登录密码：111111 支付密码：111111

##### Swagger2.0接口文档介绍

##### 演示开始！提前注册好了一个普通用户

- [ ] ##### 1.直接登录=》开通账户=》门户页面简单介绍下（两个图表）=》个人信息的修改=》个人中心（查看个人余额，看看表格图表，充值余额介绍）=》购入理财产品=》预购中心操作演示=》成功生成订单=》支付

- [ ] ##### 3.后台管理从上到下介绍，着重介绍当前用户支付的订单详情（买了哪些产品）以及完成订单

- [ ] ##### 4.权限的管理介绍

- [ ] ##### 6.用户在个人中心查看个人余额改变，去重效果介绍展示

##### 演示完毕！

3.5.1平台展示大致介绍完毕，接下来我们进入到第五个板块项目的亮点。我主要总结了这四个方面。1.产品分类2.订单产品的去重，3.用户余额的结算与充值4.后台管理员权限。

3.6.1接下来我这边将对这次的项目做一个总结。首先本文的研究结论主要有以下几点：(1)在做本项目时，使用了一些多样的Oracle语句实现想要的功能，虽然学艺不精，但是也顺利地将本网站较好的完成。(2)在做前端功能实现时，组件并不适配，通过不断剖析每个属性的含义，逐渐找到了解决的办法。

同样一个项目不可能是完美的，我也总结出了许多不足之处：(1)由于缺乏网络安全技术，面对跨站脚本攻击xss，不能够完全保障使用者的账号安全，并且网站的承载量较低，在线人数过多时将会导致网站崩溃。(2)本吾爱理财平台使用简单算法，运行效率低下，后期还需要对部分模块的算法进行优化以提高网站运行效率。

那接下来的时间我将会对我的不足之处做一些功课，争取早日完善好整个项目。

最后再次感谢各位老师们的细心聆听，以及我的两位指导老师张茜和曹天杰老师，当然还有我的班主任周婕婕老师以及企业讲师王伟老师，他们不管是在我的生活上还是未来的职业规划上都给予了我很多方向。正因为有了他们才让我的大四生活充满色彩！好的老师们，我这边的介绍完毕了。





### 可能问到的问题！

##### 1.如何实现登录的拦截？

该平台用了两种方式。

1.通过后端登录时的session判断，如果存入session的属性username不存在则开启后端拦截器，重定向到登录页面

2.前端vue框架这边采用路由前置守卫，通过判断存入localStorage中的属性是否存在，并且即将跳转的页面不是登录页面的情况下，那么当如果属性不存在那么就跳转登录页。总结的话，通过前后端配合的方式实现登录的拦截。

##### 2.该平台都用到了哪些技术？介绍一下

后端使用了主流框架Springboot+mybatis,还有像登录的拦截器Intercepter,包括还有像设置了后端允许跨域的cors

前端的话使用了vue2.0的全家桶，包括像vuex全局状态的管理,vue-router路由切换,以及Element Ui 组件库和ECharts数据的图表显示等

##### 3.数据的实时刷新怎么做，怎么优化？

可以考虑使用定时刷新，前端通过settimeOut ,定时发送请求，传入请求的参数可以在一定的范围内通过Math.random()方法随机生成

优化：可以考虑使用redis缓存数据库。

##### 4.数据是怎么通过ECharts显示的？

首先我这边使用的是Apache ECharts官方网站提供的模板，首先要在页面上框定好一个存放图表的区域，设置好宽高。然后要做的就是在前端mounted钩子函数这边去发送axios请求去获取数据，然后将数据存入到自定义的数组中，然后将对应的数组放到ECharts对应的属性上。

##### 5.产品去重，批量添加，删除，权限管理是怎么实现的？

产品去重：主要是通过sql语句中partition by 产品的名字的方式 ，如果出现产品名称重复name 查询出的row number 会显示2 ，再通过order by 的方式 筛选出 row number 等于1的记录即可

批量添加：通过前端传过来一个Json字符串，然后将它转成Json数组的形式，然后在mapper映射文件中，在插入语句中循环遍历这个数组，并使用union all的方式连接，实现了批量添加记录到表中。

批量删除：通过前端传来的包含产品id的数组，在mapper映射文件中，通过语法 in 的方式，即id在传入的的数组中就把他删除。

权限管理：首先在表结构设计时，给管理员添加了一个类型字段，当管理员登录后，他的信息此时已经被存入到vuex中了，这个时候就可以通过判断这个管理员的类型是否大于预设值，如果小于预设值，那么权限受限，功能按钮的属性给他设置为disable不可用。语句的判断这边主要通过三元运算符的方式。
